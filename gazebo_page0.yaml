# =============================================================================
# GAZEBO THERMOSTAT - PAGE 0 (CURRENT OUTDOOR CONDITIONS)
# =============================================================================
# This file contains sensors for Page 0 of the Nextion display:
# - Current actual temperature (temp field)
# - Daily precipitation probability (precip field)
# =============================================================================

# -----------------------------------------------------------------------------
# PAGE 0 (zero) - CURRENT OUTDOOR CONDITIONS
# -----------------------------------------------------------------------------

sensor:
- platform: homeassistant
  id: ha_current_temperature
  entity_id: sensor.gazebo_current_temperature
  name: "Gazebo Current Temperature"
  unit_of_measurement: "°C"
  accuracy_decimals: 1
  internal: true
  on_value:
    then:
      - lambda: |-
          ESP_LOGI("ha_temp", "=== TEMPERATURE CALLBACK TRIGGERED ===");
          ESP_LOGI("ha_temp", "Received temperature: %f°C", x);
          if (!isnan(x)) {
            char cmd[32];
            snprintf(cmd, sizeof(cmd), "zero.temp.val=%d", (int) lroundf(x));
            ESP_LOGI("ha_temp", "Sending to Nextion: %s", cmd);
            id(nextion0).send_command(cmd);
            ESP_LOGI("ha_temp", "Command sent successfully");
          } else {
            ESP_LOGI("ha_temp", "Temperature value is NaN!");
          }

- platform: homeassistant
  id: ha_daily_precipitation
  entity_id: sensor.gazebo_day_0_precipitation_probability
  name: "Gazebo Day 0 Precipitation Probability"
  unit_of_measurement: "%"
  accuracy_decimals: 0
  internal: true
  on_value:
    then:
      - lambda: |-
          ESP_LOGI("ha_precip", "=== DAILY PRECIPITATION CALLBACK TRIGGERED ===");
          ESP_LOGI("ha_precip", "Received daily precipitation probability: %f%%", x);
          if (!isnan(x)) {
            char cmd[32];
            snprintf(cmd, sizeof(cmd), "zero.precip.val=%d", (int) lroundf(x));
            ESP_LOGI("ha_precip", "Sending to Nextion page 0: %s", cmd);
            id(nextion0).send_command(cmd);
            ESP_LOGI("ha_precip", "Daily precipitation probability sent successfully");
          } else {
            ESP_LOGI("ha_precip", "Daily precipitation probability value is NaN!");
          }
