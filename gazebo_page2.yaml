# =============================================================================
# GAZEBO THERMOSTAT - PAGE 2 (7-DAY DAILY FORECAST)
# =============================================================================
# This file contains sensors for Page 2 of the Nextion display:
# Column 1: Date (dt20-dt26) - Day/Month format
# Column 2: Weather Icons (wxIcon20-wxIcon26)
# Column 3: Temperature Max/Min (tmax0-tmax6, tmin0-tmin6)
# Column 4: Precipitation Probability (precip20-precip26)
# =============================================================================

# -----------------------------------------------------------------------------
# PAGE 2 (two) - 7-DAY DAILY FORECAST
# Column 1: Date (dt20-dt26) - handled by template sensors below
# Column 2: Weather Icons (wxIcon20-wxIcon26)
# Column 3: Temperature Max/Min (tmax0-tmax6, tmin0-tmin6)
# Column 4: Precipitation Probability % (precip20-precip26)
# -----------------------------------------------------------------------------

sensor:
  # PAGE 2 - COLUMN 2: WEATHER ICONS (wxIcon20-wxIcon26)
- platform: homeassistant
  id: ha_day_0_weather_code
  entity_id: sensor.gazebo_day_0_weather_code
  name: "Day 0 Weather Code"
  unit_of_measurement: ""
  accuracy_decimals: 0
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_wx_d0", "Received Day 0 weather code: %f", x);
        if (!isnan(x)) {
          int weather_code = (int) lroundf(x);
          int icon_number = 26;
          switch(weather_code) {
          case 0: case 1: icon_number = 26; break;
          case 2: icon_number = 22; break;
          case 3: icon_number = 3; break;
          case 45: case 48: icon_number = 3; break;
          case 51: icon_number = 17; break;
          case 53: case 55: icon_number = 16; break;
          case 56: case 57: icon_number = 18; break;
          case 61: icon_number = 17; break;
          case 63: icon_number = 16; break;
          case 65: icon_number = 15; break;
          case 66: case 67: icon_number = 18; break;
          case 71: icon_number = 19; break;
          case 73: case 75: case 77: icon_number = 20; break;
          case 80: icon_number = 17; break;
          case 81: icon_number = 16; break;
          case 82: icon_number = 15; break;
          case 85: icon_number = 19; break;
          case 86: icon_number = 20; break;
          case 95: case 96: case 99: icon_number = 7; break;
          default: icon_number = 26; break;
          }
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.wxIcon20.pic=%d", icon_number);
          ESP_LOGI("ha_wx_d0", "Sending to Nextion page 2: %s (code %d → icon %d)", cmd, weather_code, icon_number);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_1_weather_code
  entity_id: sensor.gazebo_day_1_weather_code
  name: "Day 1 Weather Code"
  unit_of_measurement: ""
  accuracy_decimals: 0
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_wx_d1", "Received Day 1 weather code: %f", x);
        if (!isnan(x)) {
          int weather_code = (int) lroundf(x);
          int icon_number = 26;
          switch(weather_code) {
          case 0: case 1: icon_number = 26; break;
          case 2: icon_number = 22; break;
          case 3: icon_number = 3; break;
          case 45: case 48: icon_number = 3; break;
          case 51: icon_number = 17; break;
          case 53: case 55: icon_number = 16; break;
          case 56: case 57: icon_number = 18; break;
          case 61: icon_number = 17; break;
          case 63: icon_number = 16; break;
          case 65: icon_number = 15; break;
          case 66: case 67: icon_number = 18; break;
          case 71: icon_number = 19; break;
          case 73: case 75: case 77: icon_number = 20; break;
          case 80: icon_number = 17; break;
          case 81: icon_number = 16; break;
          case 82: icon_number = 15; break;
          case 85: icon_number = 19; break;
          case 86: icon_number = 20; break;
          case 95: case 96: case 99: icon_number = 7; break;
          default: icon_number = 26; break;
          }
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.wxIcon21.pic=%d", icon_number);
          ESP_LOGI("ha_wx_d1", "Sending to Nextion page 2: %s (code %d → icon %d)", cmd, weather_code, icon_number);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_2_weather_code
  entity_id: sensor.gazebo_day_2_weather_code
  name: "Day 2 Weather Code"
  unit_of_measurement: ""
  accuracy_decimals: 0
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_wx_d2", "Received Day 2 weather code: %f", x);
        if (!isnan(x)) {
          int weather_code = (int) lroundf(x);
          int icon_number = 26;
          switch(weather_code) {
          case 0: case 1: icon_number = 26; break;
          case 2: icon_number = 22; break;
          case 3: icon_number = 3; break;
          case 45: case 48: icon_number = 3; break;
          case 51: icon_number = 17; break;
          case 53: case 55: icon_number = 16; break;
          case 56: case 57: icon_number = 18; break;
          case 61: icon_number = 17; break;
          case 63: icon_number = 16; break;
          case 65: icon_number = 15; break;
          case 66: case 67: icon_number = 18; break;
          case 71: icon_number = 19; break;
          case 73: case 75: case 77: icon_number = 20; break;
          case 80: icon_number = 17; break;
          case 81: icon_number = 16; break;
          case 82: icon_number = 15; break;
          case 85: icon_number = 19; break;
          case 86: icon_number = 20; break;
          case 95: case 96: case 99: icon_number = 7; break;
          default: icon_number = 26; break;
          }
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.wxIcon22.pic=%d", icon_number);
          ESP_LOGI("ha_wx_d2", "Sending to Nextion page 2: %s (code %d → icon %d)", cmd, weather_code, icon_number);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_3_weather_code
  entity_id: sensor.gazebo_day_3_weather_code
  name: "Day 3 Weather Code"
  unit_of_measurement: ""
  accuracy_decimals: 0
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_wx_d3", "Received Day 3 weather code: %f", x);
        if (!isnan(x)) {
          int weather_code = (int) lroundf(x);
          int icon_number = 26;
          switch(weather_code) {
          case 0: case 1: icon_number = 26; break;
          case 2: icon_number = 22; break;
          case 3: icon_number = 3; break;
          case 45: case 48: icon_number = 3; break;
          case 51: icon_number = 17; break;
          case 53: case 55: icon_number = 16; break;
          case 56: case 57: icon_number = 18; break;
          case 61: icon_number = 17; break;
          case 63: icon_number = 16; break;
          case 65: icon_number = 15; break;
          case 66: case 67: icon_number = 18; break;
          case 71: icon_number = 19; break;
          case 73: case 75: case 77: icon_number = 20; break;
          case 80: icon_number = 17; break;
          case 81: icon_number = 16; break;
          case 82: icon_number = 15; break;
          case 85: icon_number = 19; break;
          case 86: icon_number = 20; break;
          case 95: case 96: case 99: icon_number = 7; break;
          default: icon_number = 26; break;
          }
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.wxIcon23.pic=%d", icon_number);
          ESP_LOGI("ha_wx_d3", "Sending to Nextion page 2: %s (code %d → icon %d)", cmd, weather_code, icon_number);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_4_weather_code
  entity_id: sensor.gazebo_day_4_weather_code
  name: "Day 4 Weather Code"
  unit_of_measurement: ""
  accuracy_decimals: 0
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_wx_d4", "Received Day 4 weather code: %f", x);
        if (!isnan(x)) {
          int weather_code = (int) lroundf(x);
          int icon_number = 26;
          switch(weather_code) {
          case 0: case 1: icon_number = 26; break;
          case 2: icon_number = 22; break;
          case 3: icon_number = 3; break;
          case 45: case 48: icon_number = 3; break;
          case 51: icon_number = 17; break;
          case 53: case 55: icon_number = 16; break;
          case 56: case 57: icon_number = 18; break;
          case 61: icon_number = 17; break;
          case 63: icon_number = 16; break;
          case 65: icon_number = 15; break;
          case 66: case 67: icon_number = 18; break;
          case 71: icon_number = 19; break;
          case 73: case 75: case 77: icon_number = 20; break;
          case 80: icon_number = 17; break;
          case 81: icon_number = 16; break;
          case 82: icon_number = 15; break;
          case 85: icon_number = 19; break;
          case 86: icon_number = 20; break;
          case 95: case 96: case 99: icon_number = 7; break;
          default: icon_number = 26; break;
          }
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.wxIcon24.pic=%d", icon_number);
          ESP_LOGI("ha_wx_d4", "Sending to Nextion page 2: %s (code %d → icon %d)", cmd, weather_code, icon_number);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_5_weather_code
  entity_id: sensor.gazebo_day_5_weather_code
  name: "Day 5 Weather Code"
  unit_of_measurement: ""
  accuracy_decimals: 0
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_wx_d5", "Received Day 5 weather code: %f", x);
        if (!isnan(x)) {
          int weather_code = (int) lroundf(x);
          int icon_number = 26;
          switch(weather_code) {
          case 0: case 1: icon_number = 26; break;
          case 2: icon_number = 22; break;
          case 3: icon_number = 3; break;
          case 45: case 48: icon_number = 3; break;
          case 51: icon_number = 17; break;
          case 53: case 55: icon_number = 16; break;
          case 56: case 57: icon_number = 18; break;
          case 61: icon_number = 17; break;
          case 63: icon_number = 16; break;
          case 65: icon_number = 15; break;
          case 66: case 67: icon_number = 18; break;
          case 71: icon_number = 19; break;
          case 73: case 75: case 77: icon_number = 20; break;
          case 80: icon_number = 17; break;
          case 81: icon_number = 16; break;
          case 82: icon_number = 15; break;
          case 85: icon_number = 19; break;
          case 86: icon_number = 20; break;
          case 95: case 96: case 99: icon_number = 7; break;
          default: icon_number = 26; break;
          }
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.wxIcon25.pic=%d", icon_number);
          ESP_LOGI("ha_wx_d5", "Sending to Nextion page 2: %s (code %d → icon %d)", cmd, weather_code, icon_number);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_6_weather_code
  entity_id: sensor.gazebo_day_6_weather_code
  name: "Day 6 Weather Code"
  unit_of_measurement: ""
  accuracy_decimals: 0
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_wx_d6", "Received Day 6 weather code: %f", x);
        if (!isnan(x)) {
          int weather_code = (int) lroundf(x);
          int icon_number = 26;
          switch(weather_code) {
          case 0: case 1: icon_number = 26; break;
          case 2: icon_number = 22; break;
          case 3: icon_number = 3; break;
          case 45: case 48: icon_number = 3; break;
          case 51: icon_number = 17; break;
          case 53: case 55: icon_number = 16; break;
          case 56: case 57: icon_number = 18; break;
          case 61: icon_number = 17; break;
          case 63: icon_number = 16; break;
          case 65: icon_number = 15; break;
          case 66: case 67: icon_number = 18; break;
          case 71: icon_number = 19; break;
          case 73: case 75: case 77: icon_number = 20; break;
          case 80: icon_number = 17; break;
          case 81: icon_number = 16; break;
          case 82: icon_number = 15; break;
          case 85: icon_number = 19; break;
          case 86: icon_number = 20; break;
          case 95: case 96: case 99: icon_number = 7; break;
          default: icon_number = 26; break;
          }
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.wxIcon26.pic=%d", icon_number);
          ESP_LOGI("ha_wx_d6", "Sending to Nextion page 2: %s (code %d → icon %d)", cmd, weather_code, icon_number);
          id(nextion0).send_command(cmd);
        }

  # PAGE 2 - COLUMN 3: TEMPERATURE MAX (tmax0-tmax6)
- platform: homeassistant
  id: ha_day_0_temp_max
  entity_id: sensor.gazebo_day_0_temperature_max
  name: "Day 0 Temperature Max"
  unit_of_measurement: "°C"
  accuracy_decimals: 1
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_tmax_d0", "Received Day 0 temp max: %f°C", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.tmax0.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_tmax_d0", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_1_temp_max
  entity_id: sensor.gazebo_day_1_temperature_max
  name: "Day 1 Temperature Max"
  unit_of_measurement: "°C"
  accuracy_decimals: 1
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_tmax_d1", "Received Day 1 temp max: %f°C", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.tmax1.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_tmax_d1", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_2_temp_max
  entity_id: sensor.gazebo_day_2_temperature_max
  name: "Day 2 Temperature Max"
  unit_of_measurement: "°C"
  accuracy_decimals: 1
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_tmax_d2", "Received Day 2 temp max: %f°C", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.tmax2.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_tmax_d2", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_3_temp_max
  entity_id: sensor.gazebo_day_3_temperature_max
  name: "Day 3 Temperature Max"
  unit_of_measurement: "°C"
  accuracy_decimals: 1
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_tmax_d3", "Received Day 3 temp max: %f°C", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.tmax3.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_tmax_d3", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_4_temp_max
  entity_id: sensor.gazebo_day_4_temperature_max
  name: "Day 4 Temperature Max"
  unit_of_measurement: "°C"
  accuracy_decimals: 1
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_tmax_d4", "Received Day 4 temp max: %f°C", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.tmax4.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_tmax_d4", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_5_temp_max
  entity_id: sensor.gazebo_day_5_temperature_max
  name: "Day 5 Temperature Max"
  unit_of_measurement: "°C"
  accuracy_decimals: 1
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_tmax_d5", "Received Day 5 temp max: %f°C", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.tmax5.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_tmax_d5", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_6_temp_max
  entity_id: sensor.gazebo_day_6_temperature_max
  name: "Day 6 Temperature Max"
  unit_of_measurement: "°C"
  accuracy_decimals: 1
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_tmax_d6", "Received Day 6 temp max: %f°C", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.tmax6.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_tmax_d6", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }

  # PAGE 2 - COLUMN 3: TEMPERATURE MIN (tmin0-tmin6)
- platform: homeassistant
  id: ha_day_0_temp_min
  entity_id: sensor.gazebo_day_0_temperature_min
  name: "Day 0 Temperature Min"
  unit_of_measurement: "°C"
  accuracy_decimals: 1
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_tmin_d0", "Received Day 0 temp min: %f°C", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.tmin0.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_tmin_d0", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_1_temp_min
  entity_id: sensor.gazebo_day_1_temperature_min
  name: "Day 1 Temperature Min"
  unit_of_measurement: "°C"
  accuracy_decimals: 1
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_tmin_d1", "Received Day 1 temp min: %f°C", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.tmin1.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_tmin_d1", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_2_temp_min
  entity_id: sensor.gazebo_day_2_temperature_min
  name: "Day 2 Temperature Min"
  unit_of_measurement: "°C"
  accuracy_decimals: 1
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_tmin_d2", "Received Day 2 temp min: %f°C", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.tmin2.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_tmin_d2", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_3_temp_min
  entity_id: sensor.gazebo_day_3_temperature_min
  name: "Day 3 Temperature Min"
  unit_of_measurement: "°C"
  accuracy_decimals: 1
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_tmin_d3", "Received Day 3 temp min: %f°C", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.tmin3.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_tmin_d3", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_4_temp_min
  entity_id: sensor.gazebo_day_4_temperature_min
  name: "Day 4 Temperature Min"
  unit_of_measurement: "°C"
  accuracy_decimals: 1
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_tmin_d4", "Received Day 4 temp min: %f°C", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.tmin4.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_tmin_d4", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_5_temp_min
  entity_id: sensor.gazebo_day_5_temperature_min
  name: "Day 5 Temperature Min"
  unit_of_measurement: "°C"
  accuracy_decimals: 1
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_tmin_d5", "Received Day 5 temp min: %f°C", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.tmin5.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_tmin_d5", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_6_temp_min
  entity_id: sensor.gazebo_day_6_temperature_min
  name: "Day 6 Temperature Min"
  unit_of_measurement: "°C"
  accuracy_decimals: 1
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_tmin_d6", "Received Day 6 temp min: %f°C", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.tmin6.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_tmin_d6", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }

  # PAGE 2 - COLUMN 4: PRECIPITATION PROBABILITY (precip20-precip26)
- platform: homeassistant
  id: ha_day_0_precip_prob
  entity_id: sensor.gazebo_day_0_precipitation_probability
  name: "Day 0 Precipitation Probability"
  unit_of_measurement: "%"
  accuracy_decimals: 0
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_precip_d0", "Received Day 0 precip prob: %f%%", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.precip20.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_precip_d0", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_1_precip_prob
  entity_id: sensor.gazebo_day_1_precipitation_probability
  name: "Day 1 Precipitation Probability"
  unit_of_measurement: "%"
  accuracy_decimals: 0
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_precip_d1", "Received Day 1 precip prob: %f%%", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.precip21.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_precip_d1", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_2_precip_prob
  entity_id: sensor.gazebo_day_2_precipitation_probability
  name: "Day 2 Precipitation Probability"
  unit_of_measurement: "%"
  accuracy_decimals: 0
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_precip_d2", "Received Day 2 precip prob: %f%%", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.precip22.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_precip_d2", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_3_precip_prob
  entity_id: sensor.gazebo_day_3_precipitation_probability
  name: "Day 3 Precipitation Probability"
  unit_of_measurement: "%"
  accuracy_decimals: 0
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_precip_d3", "Received Day 3 precip prob: %f%%", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.precip23.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_precip_d3", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_4_precip_prob
  entity_id: sensor.gazebo_day_4_precipitation_probability
  name: "Day 4 Precipitation Probability"
  unit_of_measurement: "%"
  accuracy_decimals: 0
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_precip_d4", "Received Day 4 precip prob: %f%%", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.precip24.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_precip_d4", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_5_precip_prob
  entity_id: sensor.gazebo_day_5_precipitation_probability
  name: "Day 5 Precipitation Probability"
  unit_of_measurement: "%"
  accuracy_decimals: 0
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_precip_d5", "Received Day 5 precip prob: %f%%", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.precip25.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_precip_d5", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }

- platform: homeassistant
  id: ha_day_6_precip_prob
  entity_id: sensor.gazebo_day_6_precipitation_probability
  name: "Day 6 Precipitation Probability"
  unit_of_measurement: "%"
  accuracy_decimals: 0
  internal: true
  on_value:
    then:
    - lambda: |-
        ESP_LOGI("ha_precip_d6", "Received Day 6 precip prob: %f%%", x);
        if (!isnan(x)) {
          char cmd[32];
          snprintf(cmd, sizeof(cmd), "two.precip26.val=%d", (int) lroundf(x));
          ESP_LOGI("ha_precip_d6", "Sending to Nextion page 2: %s", cmd);
          id(nextion0).send_command(cmd);
        }
